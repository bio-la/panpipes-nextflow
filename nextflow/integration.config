// nextflow.config — Integration (alineado con tu visualisation.config)
process.executor = 'local'
docker.enabled   = true

params {

  // Base params
  preprocessed_obj = '/Users/mylenemarianagonzalesandre/Development/HiWi/Panpipes/data/teaseq/integration/teaseq.h5mu'
  outdir = './results'
  mode   = 'integration'
  sample_prefix = 'teaseq'

  // Trying to implement resources here - send them to profiles later?
  resources = [
    threads_high : 1,
    threads_medium: 1,
    threads_low  : 1,
    threads_gpu  : 2
  ]

  // RNA modality
  rna = [
    run    : true,
    tools  : 'harmony,scvi,bbknn,combat',
    column : 'dataset',
    harmony: [ sigma: 0.1, theta: 1.0, npcs: 30 ],
    bbknn  : [ neighbors_within_batch: 20 ],
    scvi   : [
      seed: 1492,
      exclude_mt_genes: true,
      mt_column: 'mt',
      model_args   : [ n_layers: null, n_latent: null, gene_likelihood: 'zinb' ],
      training_args: [ max_epochs: 400, train_size: 0.9, early_stopping: true ],
      training_plan: [ lr: 0.001, n_epochs_kl_warmup: 400, reduce_lr_on_plateau: true,
                       lr_scheduler_metric: null, lr_patience: 8, lr_factor: 0.1 ]
    ],
    neighbors: [ npcs: 30, k: 30, metric: 'euclidean', method: 'scanpy' ]
  ]

  // Protein modality
  prot = [
    run    : true,
    tools  : 'harmony',
    column : 'orig.ident',
    harmony: [ sigma: 0.1, theta: 1.0, npcs: 30 ],
    bbknn  : [ neighbors_within_batch: 20 ],
    neighbors: [ npcs: 30, k: 30, metric: 'euclidean', method: 'scanpy' ]
  ]

  // ATAC modality
  atac = [
    run   : true,
    dimred: 'LSI',
    tools : 'harmony,bbknn',
    column: 'dataset',
    harmony: [ sigma: 0.1, theta: 1.0, npcs: 30 ],
    bbknn  : [ neighbors_within_batch: null ],
    neighbors: [ npcs: 30, k: 30, metric: 'euclidean', method: 'scanpy' ]
  ]

  // Multimodal
  multimodal = [
    run  : true,
    tools: ['WNN','totalvi'],
    column_categorical: 'sample_id',

    totalvi: [
      seed: 1492,
      modalities: 'rna,prot',
      exclude_mt_genes: true,
      mt_column: 'mt',
      filter_by_hvg: true,
      filter_prot_outliers: false,
      model_args   : [ latent_distribution: 'normal' ],
      training_args: [ max_epochs: 100, train_size: 0.9, early_stopping: true ],
      training_plan: null
    ],

    MultiVI: [
      seed: 1492,
      lowmem: true,
      model_args: [
        n_hidden: null, n_latent: null, region_factors: true,
        latent_distribution: 'normal', deeply_inject_covariates: false, fully_paired: false
      ],
      training_args: [
        max_epochs: 500, lr: 0.0001, use_gpu: null, train_size: 0.9, validation_size: null,
        batch_size: 128, weight_decay: 0.001, eps: 1e-08, early_stopping: true, save_best: true,
        check_val_every_n_epoch: null, n_steps_kl_warmup: null, n_epochs_kl_warmup: 50,
        adversarial_mixing: true
      ],
      training_plan: null
    ],

    mofa: [
      modalities: null,
      filter_by_hvg: true, n_factors: 10, n_iterations: 1000,
      convergence_mode: 'fast', save_parameters: false, outfile: null
    ],

    WNN: [
      modalities: 'rna,prot,atac',
      batch_corrected: [ rna: null, prot: null, atac: null ],
      knn: [
        rna : [ npcs: 30, k: 30, metric: 'euclidean', method: 'scanpy' ],
        prot: [ npcs: 30, k: 30, metric: 'euclidean', method: 'scanpy' ],
        atac: [ npcs: 30, k: 30, metric: 'euclidean', method: 'scanpy' ]
      ],
      n_neighbors: null,
      n_bandwidth_neighbors: 20,
      n_multineighbors: 200,
      metric: 'euclidean',
      low_memory: true
    ],

    neighbors: [ npcs: 30, k: 30, metric: 'euclidean', method: 'scanpy' ]
  ]

  // Plotting
  plotqc = [
    grouping_var: 'dataset,sample_id',
    all       : 'rep:receptor_subtype',
    rna       : 'rna:total_counts',
    prot      : 'prot:total_counts',
    atac      : null,
    multimodal: 'rna:total_counts'
  ]

  // Métricas (si activas SCIB/LISI en el workflow)
  scib = [ rna: null, prot: null, atac: null ]

  // Final object
  final_obj = [
    rna      : [ include: true,  bc_choice: 'no_correction' ],
    prot     : [ include: true,  bc_choice: 'harmony' ],
    atac     : [ include: false, bc_choice: 'bbknn' ],
    multimodal: [ include: true,  bc_choice: 'WNN' ]
  ]
}

profiles {
  docker_conda {
    docker.enabled   = false
    conda.enabled    = true
    process.container = 'mari3ga/single_cell:v1'
    process.conda     = '/Users/mylenemarianagonzalesandre/miniconda3/envs/spatial-transcriptomics'
  }
}
